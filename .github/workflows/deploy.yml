
name: continuous delivery

on:
    push:
        branches: [ "main" ]
    workflow_dispatch:

env:
  type: "none"
  tag: "none"
  repository: "none"

jobs:
    build:

        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
          contents: write   # to update git
          pages: write      # to deploy to Pages
          id-token: write   # to verify the deployment originates from an appropriate source

        runs-on: ubuntu-latest
        
        environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}

        steps:

        - name: setup
          run: |
            yq --help
            yq --version

        - name: Checkout Out Expected State
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Retrieve Deployment Configuration
          id: set_var
          run: |
            echo "type=$(yq '.deploy.type' < githubpages.yaml)" >> $GITHUB_ENV
            echo "tag=$(yq '.deploy.tag' < githubpages.yaml)" >> $GITHUB_ENV
            echo "repository=$(yq '.deploy.repository' < githubpages.yaml)" >> $GITHUB_ENV

        - name: Echo Out Deployment Configuration Variables
          run: |
            echo "${{env.type}}"
            echo "${{env.tag}}"
            echo "${{env.repository}}"

        - name: Download Artifact
          id: downloadstep
          uses: robinraju/release-downloader@v1.8
          with:
            repository: "${{env.repository}}"
            tag: "${{env.tag}}"
            extract: false

        - name: Install zip
          uses: montudor/action-zip@v1

        - name: Zip output
          run: unzip -qq ${{ fromJson(steps.downloadstep.outputs.downloaded_files)[0] }} -d dist

        # - name: Echo Out Download Artifact Variables
        #   run: |
        #     echo "${{ fromJson(steps.downloadstep.outputs.downloaded_files)[0] }}"

        # - uses: actions/upload-artifact@v3
        #   with:
        #     name: demo-cicd-webapp
        #     path: "${{ fromJson(steps.downloadstep.outputs.downloaded_files)[0] }}"

        # - name: Setup Pages
        #   id: pages
        #   uses: actions/configure-pages@v3

        # - name: Deploy to GitHub Pages
        #   id: deployment
        #   uses: actions/deploy-pages@v2
        #   with:
        #     artifact_name:  demo-cicd-webapp

        - name: Deploy to GitHub Pages
          uses: peaceiris/actions-gh-pages@v3.9.3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./dist/dist/demo-cicd-webapp
            enable_jekyll: true

          # uses: AhsanAyaz/angular-deploy-gh-pages-actions@v1.4.0 ## replace by latest version without it you will see Expected format {org}/{repo}[/path]@ref. Actual 'AhsanAyaz/angular-deploy-gh-pages-actions',Input string was not in a correct format.
          # with:
          #   #github_access_token: ${{ secrets.GITHUB_TOKEN }} # see the Configuration section for how you can create secrets
          #   #build_configuration: staging # The build environment for the app. please look configurations in your angular.json
          #   base_href: ''  # make sure this corresponds to https://<your_username>.github.io/<base_href>/
          #   deploy_branch: gh-pages # The branch the action should deploy to.
          #   angular_dist_build_folder: dist/demo-cicd-webapp # The folder where your project is supposed to be after running ng build by the action.
      